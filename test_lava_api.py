#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Lava API
"""

import os
import sys
import django
from decimal import Decimal

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
sys.path.insert(0, '/Users/berik/Desktop/tg-nanobanana')
django.setup()

from miniapp.payment_providers.lava_provider import LavaAPI, get_payment_url


def test_lava_api():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ Lava API
    """

    print("=" * 60)
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° LAVA API")
    print("=" * 60)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API
    lava_api = LavaAPI()

    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
    print("-" * 40)

    if lava_api.api_key:
        print(f"‚úÖ API Key –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {lava_api.api_key[:10]}...{lava_api.api_key[-4:]}")
    else:
        print("‚ùå API Key –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        return False

    if lava_api.webhook_secret:
        print(f"‚úÖ Webhook Secret –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {lava_api.webhook_secret}")
    else:
        print("‚ö†Ô∏è  Webhook Secret –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")

    # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞ —á–µ—Ä–µ–∑ API
    print("\n2. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞ —á–µ—Ä–µ–∑ API:")
    print("-" * 40)

    test_order_id = f"api_test_{int(os.urandom(4).hex(), 16)}"
    test_amount = Decimal("5.00")  # $5 –∑–∞ 100 —Ç–æ–∫–µ–Ω–æ–≤

    print(f"Order ID: {test_order_id}")
    print(f"Amount: ${test_amount}")

    try:
        # Debug: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º URL –∏ headers
        print(f"   API URL: {lava_api.BASE_URL}/invoice/create")
        print(f"   Headers: X-Api-Key: {lava_api.api_key[:10]}...{lava_api.api_key[-4:] if lava_api.api_key else 'None'}")

        invoice = lava_api.create_invoice(
            amount=test_amount,
            order_id=test_order_id,
            custom_fields={
                "test": True,
                "credits": 100,
                "email": "test@example.com"
            }
        )

        if invoice:
            print(f"‚úÖ –°—á–µ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"   Invoice ID: {invoice.get('id')}")
            print(f"   Payment URL: {invoice.get('url')}")
            print(f"   Status: {invoice.get('status')}")

            # –°–æ—Ö—Ä–∞–Ω–∏–º ID –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
            invoice_id = invoice.get('id')

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å—á–µ—Ç–∞
            print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å—á–µ—Ç–∞:")
            print("-" * 40)

            status = lava_api.get_invoice_status(invoice_id)
            if status:
                print(f"‚úÖ –°—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω: {status}")
            else:
                print("‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å")

            return True

        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—á–µ—Ç —á–µ—Ä–µ–∑ API")
            print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API –∫–ª—é—á–∞")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å API: {e}")
        return False


def test_payment_url_generation():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
    """

    print("\n4. –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å—Å—ã–ª–æ–∫:")
    print("-" * 40)

    test_cases = [
        (100, "test_100"),
        (200, "test_200"),
        (500, "test_500"),
        (1000, "test_1000")
    ]

    for credits, order_id in test_cases:
        print(f"\n–¢–µ—Å—Ç –¥–ª—è {credits} —Ç–æ–∫–µ–Ω–æ–≤:")

        # –¢–µ—Å—Ç —Å API
        url_api = get_payment_url(
            credits=credits,
            transaction_id=order_id,
            user_email="test@example.com",
            use_api=True
        )

        if url_api:
            print(f"  ‚úÖ –° API: {url_api[:50]}...")
        else:
            print(f"  ‚ö†Ô∏è  API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback")

            # –¢–µ—Å—Ç —Å–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ —Å—Å—ã–ª–∫–∞–º–∏
            url_static = get_payment_url(
                credits=credits,
                transaction_id=order_id,
                user_email="test@example.com",
                use_api=False
            )

            if url_static:
                print(f"  ‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è: {url_static[:50]}...")
            else:
                print(f"  ‚ùå –ù–µ—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π —Å—Å—ã–ª–∫–∏ –¥–ª—è {credits} —Ç–æ–∫–µ–Ω–æ–≤")


def test_webhook_signature():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∏ webhook
    """

    print("\n5. –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏ webhook:")
    print("-" * 40)

    lava_api = LavaAPI()

    test_data = '{"status": "success", "amount": 5.00}'

    # –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å—å
    import hmac
    import hashlib

    if lava_api.webhook_secret:
        correct_signature = hmac.new(
            lava_api.webhook_secret.encode(),
            test_data.encode(),
            hashlib.sha256
        ).hexdigest()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å–∏
        if lava_api.verify_webhook_signature(test_data, correct_signature):
            print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å—å –ø—Ä–∏–Ω—è—Ç–∞")
        else:
            print("‚ùå –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å–∏
        if not lava_api.verify_webhook_signature(test_data, "wrong_signature"):
            print("‚úÖ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")
        else:
            print("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å—å –ø—Ä–∏–Ω—è—Ç–∞")
    else:
        print("‚ö†Ô∏è  Webhook Secret –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∞")


if __name__ == "__main__":
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç API
    api_works = test_lava_api()

    # –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–æ–∫
    test_payment_url_generation()

    # –¢–µ—Å—Ç –ø–æ–¥–ø–∏—Å–∏ webhook
    test_webhook_signature()

    print("\n" + "=" * 60)
    print("–†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 60)

    if api_works:
        print("‚úÖ Lava API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("   - –°—á–µ—Ç–∞ —Å–æ–∑–¥–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ API")
        print("   - –ú–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–µ–π")
        print("   - Webhook –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    else:
        print("‚ö†Ô∏è  Lava API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –µ—Å—Ç—å fallback:")
        print("   - –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏")
        print("   - Webhook –≤—Å–µ —Ä–∞–≤–Ω–æ –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")

    print("\nüìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API –∫–ª—é—á –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ Lava.top")
    print("3. –î–æ–±–∞–≤—å—Ç–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –≤—Å–µ—Ö –ø–∞–∫–µ—Ç–æ–≤ —Ç–æ–∫–µ–Ω–æ–≤")
    print("4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π –ø–ª–∞—Ç–µ–∂ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º–æ–π")