#!/usr/bin/env python3
"""
–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤–µ–±—Ö—É–∫–∞ –Ω–∞ Railway endpoint
–°–∏–º—É–ª–∏—Ä—É–µ—Ç webhook –æ—Ç Lava.top
"""

import requests
import json
import hashlib
import hmac
import time
from datetime import datetime

def send_test_webhook():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π webhook –Ω–∞ Railway"""

    # URL –≤–∞—à–µ–≥–æ webhook endpoint –Ω–∞ Railway
    WEBHOOK_URL = 'https://web-production-96df.up.railway.app/api/miniapp/lava-webhook'

    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ, –∏–º–∏—Ç–∏—Ä—É—é—â–∏–µ webhook –æ—Ç Lava.top
    # –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –æ–∂–∏–¥–∞–Ω–∏—è–º parse_webhook_data
    webhook_payload = {
        "id": f"pay_test_{int(time.time())}",
        "order_id": "90",  # ID —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ç–µ—Å—Ç–æ–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –ë–î
        "amount": 5.00,
        "currency": "USD",
        "status": "success",  # success –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
        "payment_id": f"pay_test_{int(time.time())}",
        "email": "test@example.com",
        "type": "payment",
        "event": "payment.success",
        "test_mode": True,
        "payment_method": "card",
        "custom_fields": {
            "user_id": "123456789",
            "credits": 100,
            "description": "Test payment for 100 tokens"
        },
        "created_at": datetime.now().isoformat()
    }

    # –ó–∞–≥–æ–ª–æ–≤–∫–∏, –∫–∞–∫ –æ—Ç Lava.top
    headers = {
        'Content-Type': 'application/json',
        'X-Lava-Signature': 'test_signature_12345',
        'X-Webhook-Id': f"webhook_{int(time.time())}",
        'X-Test-Mode': 'true',
        'X-API-Key': 'lava_webhook_secret_ABC123xyz789',  # –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –∏–∑ Railway
        'User-Agent': 'Lava.top/Webhook/1.0'
    }

    print("üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤–µ–±—Ö—É–∫–∞ –Ω–∞ Railway...")
    print(f"URL: {WEBHOOK_URL}")
    print(f"Order ID: {webhook_payload['order_id']}")
    print("-" * 50)

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å
        response = requests.post(
            WEBHOOK_URL,
            json=webhook_payload,
            headers=headers,
            timeout=30
        )

        print(f"üì¨ –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")

        if response.status_code == 200:
            print("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω!")
            print(f"–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.text}")

            print("\nüìã –ß—Ç–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏:")
            print("1. Webhook –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–∏–ª –¥–∞–Ω–Ω—ã–µ")
            print("2. –ü—Ä–æ–≤–µ—Ä–∏–ª –ø–æ–¥–ø–∏—Å—å (–≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è)")
            print("3. –ù–∞—à–µ–ª/—Å–æ–∑–¥–∞–ª —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é")
            print("4. –ù–∞—á–∏—Å–ª–∏–ª 100 —Ç–æ–∫–µ–Ω–æ–≤")
            print("5. –û—Ç–ø—Ä–∞–≤–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram")

        elif response.status_code == 404:
            print("‚ùå Endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω (404)")
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL: /api/miniapp/lava-webhook")

        elif response.status_code == 401:
            print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (401)")
            print("Webhook –ø–æ–ª—É—á–µ–Ω, –Ω–æ –ø–æ–¥–ø–∏—Å—å –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É")

        elif response.status_code == 500:
            print("‚ùå –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (500)")
            print(f"–î–µ—Ç–∞–ª–∏: {response.text}")

        else:
            print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {response.status_code}")
            print(f"–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")

        return response

    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ (—Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç)")

    except requests.exceptions.ConnectionError:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Railway –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    return None


def check_railway_logs():
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø—Ä–æ–≤–µ—Ä–∫–µ –ª–æ–≥–æ–≤"""

    print("\n" + "="*50)
    print("üìä –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê")
    print("="*50)
    print("\n1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Railway:")
    print("   railway logs --service web | grep 'webhook'")
    print("\n2. –ò–ª–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ Railway Dashboard:")
    print("   railway open")
    print("\n3. –ò—â–∏—Ç–µ –≤ –ª–æ–≥–∞—Ö:")
    print("   - 'Lava webhook received'")
    print("   - 'Payment xxx completed'")
    print("   - 'Credited xxx tokens'")


if __name__ == "__main__":
    print("="*50)
    print("–¢–ï–°–¢ WEBHOOK LAVA.TOP ‚Üí RAILWAY")
    print("="*50)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π webhook
    response = send_test_webhook()

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø—Ä–æ–≤–µ—Ä–∫–µ
    if response:
        check_railway_logs()

    print("\n‚ú® –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")