#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook —Å —Ä–µ–∞–ª—å–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
import django
import requests
import json
from decimal import Decimal
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
sys.path.insert(0, '/Users/berik/Desktop/tg-nanobanana')
django.setup()

from botapp.models import TgUser, UserBalance, Transaction

def create_test_transaction():
    """
    –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    """
    print("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...")

    # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ
    try:
        # –ò—â–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
        user = TgUser.objects.first()

        if not user:
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = TgUser.objects.create(
                chat_id=123456789,  # –¢–µ—Å—Ç–æ–≤—ã–π ID
                first_name="Test",
                last_name="User",
                username="testuser",
                language="ru"
            )
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
        else:
            print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.username or user.first_name}")

        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å
        user_balance, _ = UserBalance.objects.get_or_create(user=user)
        print(f"   –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {user_balance.balance} —Ç–æ–∫–µ–Ω–æ–≤")

        # –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        transaction = Transaction.objects.create(
            user=user,
            type='deposit',
            amount=Decimal('5.00'),  # $5 –∑–∞ 100 —Ç–æ–∫–µ–Ω–æ–≤
            balance_after=user_balance.balance,  # –ë–∞–ª–∞–Ω—Å –¥–æ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è
            description="–¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ 100 —Ç–æ–∫–µ–Ω–æ–≤ —á–µ—Ä–µ–∑ Lava.top",
            payment_method='card',
            is_pending=True,  # –û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            is_completed=False
        )

        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ID: {transaction.id}")
        print(f"   –°—É–º–º–∞: ${transaction.amount}")
        print(f"   –°—Ç–∞—Ç—É—Å: pending")

        return transaction.id, user.chat_id

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {e}")
        return None, None

def send_webhook(transaction_id, status="success"):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç webhook –∏–º–∏—Ç–∏—Ä—É—é—â–∏–π —É—Å–ø–µ—à–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –æ—Ç Lava.top
    """
    webhook_url = "https://web-production-96df.up.railway.app/api/miniapp/lava-webhook"
    webhook_secret = "lava_webhook_secret_ABC123xyz789"

    webhook_data = {
        "order_id": str(transaction_id),  # ID —Ä–µ–∞–ª—å–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        "payment_id": f"lava_payment_{datetime.now().timestamp()}",
        "amount": 5.00,
        "currency": "USD",
        "status": status,  # success –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
        "email": "test@example.com",
        "timestamp": datetime.now().isoformat(),
    }

    headers = {
        "Content-Type": "application/json",
        "Authorization": f"Bearer {webhook_secret}",
        "X-API-Key": webhook_secret
    }

    print(f"\n{'=' * 50}")
    print("–û–¢–ü–†–ê–í–ö–ê WEBHOOK")
    print('=' * 50)
    print(f"Transaction ID: {transaction_id}")
    print(f"Status: {status}")

    try:
        response = requests.post(
            webhook_url,
            json=webhook_data,
            headers=headers,
            timeout=10
        )

        print(f"HTTP Status: {response.status_code}")
        print(f"Response: {response.text}")

        if response.status_code == 200:
            print("\n‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!")
            return True
        else:
            print(f"\n‚ùå –û—à–∏–±–∫–∞ webhook: {response.status_code}")
            return False

    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        return False

def check_transaction_status(transaction_id):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ—Å–ª–µ webhook
    """
    try:
        transaction = Transaction.objects.get(id=transaction_id)
        user_balance = UserBalance.objects.get(user=transaction.user)

        print(f"\n{'=' * 50}")
        print("–†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê")
        print('=' * 50)
        print(f"–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è ID: {transaction.id}")
        print(f"–°—Ç–∞—Ç—É—Å: {'‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∞' if transaction.is_completed else '‚è≥ –û–∂–∏–¥–∞–µ—Ç'}")
        print(f"–ë–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ: {transaction.balance_after} —Ç–æ–∫–µ–Ω–æ–≤")
        print(f"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_balance.balance} —Ç–æ–∫–µ–Ω–æ–≤")

        if transaction.is_completed:
            print("\nüéâ –¢–ï–°–¢ –£–°–ü–ï–®–ï–ù! Webhook –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª –ø–ª–∞—Ç–µ–∂.")
            print(f"   –¢–æ–∫–µ–Ω—ã –∑–∞—á–∏—Å–ª–µ–Ω—ã: {transaction.amount * 20} —Ç–æ–∫–µ–Ω–æ–≤")  # $5 = 100 —Ç–æ–∫–µ–Ω–æ–≤
        else:
            print("\n‚ö†Ô∏è  –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –±—ã–ª–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏.")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")

if __name__ == "__main__":
    print("=" * 50)
    print("–ü–û–õ–ù–´–ô –¢–ï–°–¢ WEBHOOK –° –†–ï–ê–õ–¨–ù–û–ô –¢–†–ê–ù–ó–ê–ö–¶–ò–ï–ô")
    print("=" * 50)

    # 1. –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
    transaction_id, user_id = create_test_transaction()

    if not transaction_id:
        print("\n–¢–µ—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω –±–µ–∑ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
        sys.exit(1)

    # 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º webhook
    success = send_webhook(transaction_id)

    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if success:
        import time
        time.sleep(1)  # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É
        check_transaction_status(transaction_id)

    print("\n" + "=" * 50)
    print("\nüìù –ü–†–ò–ú–ï–ß–ê–ù–ò–Ø:")
    print("1. –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π webhook –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    print("2. –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ webhook –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –æ—Ç Lava.top")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Railway –ª–æ–≥–∏ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π")
    print(f"4. ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {transaction_id}")
    print(f"5. ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}")