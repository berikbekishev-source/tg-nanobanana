# Generated by Django 4.2.25 on 2025-10-24 05:05

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('botapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AIModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=100)),
                ('display_name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('image', 'Image Generation'), ('video', 'Video Generation')], max_length=10)),
                ('provider', models.CharField(choices=[('gemini', 'Google Gemini'), ('vertex', 'Google Vertex AI'), ('veo', 'Google Veo'), ('imagen', 'Google Imagen')], max_length=20)),
                ('description', models.TextField()),
                ('short_description', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('api_endpoint', models.CharField(blank=True, max_length=255)),
                ('api_model_name', models.CharField(max_length=100)),
                ('max_prompt_length', models.IntegerField(default=1000)),
                ('supports_image_input', models.BooleanField(default=False)),
                ('max_input_images', models.IntegerField(default=0)),
                ('default_params', models.JSONField(default=dict)),
                ('allowed_params', models.JSONField(default=dict)),
                ('max_quantity', models.IntegerField(default=4)),
                ('cooldown_seconds', models.IntegerField(default=0)),
                ('daily_limit', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_beta', models.BooleanField(default=False)),
                ('min_user_level', models.IntegerField(default=0)),
                ('order', models.IntegerField(default=0)),
                ('total_generations', models.IntegerField(default=0)),
                ('total_errors', models.IntegerField(default=0)),
                ('average_generation_time', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'AI Model',
                'verbose_name_plural': 'AI Models',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Promocode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=50, unique=True)),
                ('description', models.TextField()),
                ('is_percentage', models.BooleanField(default=False)),
                ('value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('min_deposit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('max_uses', models.IntegerField(blank=True, null=True)),
                ('max_uses_per_user', models.IntegerField(default=1)),
                ('current_uses', models.IntegerField(default=0)),
                ('valid_from', models.DateTimeField()),
                ('valid_until', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('total_activated', models.IntegerField(default=0)),
                ('total_bonus_given', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Promocode',
                'verbose_name_plural': 'Promocodes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('deposit', 'Пополнение'), ('generation', 'Генерация'), ('bonus', 'Бонус'), ('referral', 'Реферальный бонус'), ('refund', 'Возврат'), ('admin', 'Админ операция')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('description_en', models.TextField(blank=True)),
                ('payment_method', models.CharField(blank=True, choices=[('yoomoney', 'ЮMoney'), ('card', 'Банковская карта'), ('crypto_ton', 'TON'), ('crypto_usdt', 'USDT'), ('bonus', 'Бонусный счет'), ('admin', 'Администратор')], max_length=20, null=True)),
                ('payment_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('payment_data', models.JSONField(blank=True, default=dict)),
                ('is_completed', models.BooleanField(default=True)),
                ('is_pending', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_spent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_deposited', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('bonus_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('referral_code', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('referral_earnings', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User Balance',
                'verbose_name_plural': 'User Balances',
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('notify_on_completion', models.BooleanField(default=True)),
                ('notify_on_bonus', models.BooleanField(default=True)),
                ('notify_on_news', models.BooleanField(default=True)),
                ('interface_language', models.CharField(default='ru', max_length=10)),
                ('default_image_quantity', models.IntegerField(default=1)),
                ('default_video_duration', models.IntegerField(default=5)),
                ('total_generations', models.IntegerField(default=0)),
                ('total_images_generated', models.IntegerField(default=0)),
                ('total_videos_generated', models.IntegerField(default=0)),
                ('last_generation_at', models.DateTimeField(blank=True, null=True)),
                ('user_level', models.IntegerField(default=0)),
                ('experience_points', models.IntegerField(default=0)),
                ('achievements', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User Settings',
                'verbose_name_plural': 'User Settings',
            },
        ),
        migrations.AlterModelOptions(
            name='genrequest',
            options={'ordering': ['-created_at'], 'verbose_name': 'Generation Request', 'verbose_name_plural': 'Generation Requests'},
        ),
        migrations.AlterModelOptions(
            name='tguser',
            options={'ordering': ['-created_at'], 'verbose_name': 'Telegram User', 'verbose_name_plural': 'Telegram Users'},
        ),
        migrations.AddField(
            model_name='genrequest',
            name='completed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='genrequest',
            name='cost',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6),
        ),
        migrations.AddField(
            model_name='genrequest',
            name='duration',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='genrequest',
            name='error_message',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='genrequest',
            name='file_sizes',
            field=models.JSONField(default=list),
        ),
        migrations.AddField(
            model_name='genrequest',
            name='generation_params',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='genrequest',
            name='generation_type',
            field=models.CharField(choices=[('text2image', 'Text to Image'), ('image2image', 'Image to Image'), ('text2video', 'Text to Video'), ('image2video', 'Image to Video')], default='text2image', max_length=20),
        ),
        migrations.AddField(
            model_name='genrequest',
            name='input_images',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='genrequest',
            name='processing_time',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='genrequest',
            name='started_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='genrequest',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='generations', to='botapp.tguser'),
        ),
        migrations.AddField(
            model_name='genrequest',
            name='video_resolution',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='tguser',
            name='first_name',
            field=models.CharField(blank=True, default='', max_length=255),
        ),
        migrations.AddField(
            model_name='tguser',
            name='is_blocked',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='tguser',
            name='is_premium',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='tguser',
            name='language_code',
            field=models.CharField(default='ru', max_length=10),
        ),
        migrations.AddField(
            model_name='tguser',
            name='last_name',
            field=models.CharField(blank=True, default='', max_length=255),
        ),
        migrations.AddField(
            model_name='tguser',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='genrequest',
            name='chat_id',
            field=models.BigIntegerField(db_index=True),
        ),
        migrations.AlterField(
            model_name='genrequest',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='genrequest',
            name='model',
            field=models.CharField(max_length=64),
        ),
        migrations.AlterField(
            model_name='genrequest',
            name='run_code',
            field=models.CharField(db_index=True, max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name='genrequest',
            name='status',
            field=models.CharField(choices=[('queued', 'В очереди'), ('processing', 'Обработка'), ('done', 'Завершено'), ('error', 'Ошибка'), ('cancelled', 'Отменено')], db_index=True, default='queued', max_length=16),
        ),
        migrations.AddIndex(
            model_name='genrequest',
            index=models.Index(fields=['-created_at', 'status'], name='botapp_genr_created_3944be_idx'),
        ),
        migrations.AddIndex(
            model_name='genrequest',
            index=models.Index(fields=['chat_id', '-created_at'], name='botapp_genr_chat_id_7fcab1_idx'),
        ),
        migrations.AddField(
            model_name='usersettings',
            name='preferred_image_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preferred_by_users_image', to='botapp.aimodel'),
        ),
        migrations.AddField(
            model_name='usersettings',
            name='preferred_video_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preferred_by_users_video', to='botapp.aimodel'),
        ),
        migrations.AddField(
            model_name='usersettings',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='botapp.tguser'),
        ),
        migrations.AddField(
            model_name='userbalance',
            name='referred_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to='botapp.tguser'),
        ),
        migrations.AddField(
            model_name='userbalance',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='balance', to='botapp.tguser'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='generation_request',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='botapp.genrequest'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='related_transaction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='botapp.transaction'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='botapp.tguser'),
        ),
        migrations.AddField(
            model_name='genrequest',
            name='ai_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='requests', to='botapp.aimodel'),
        ),
        migrations.AddField(
            model_name='genrequest',
            name='transaction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generation', to='botapp.transaction'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['user', '-created_at'], name='botapp_tran_user_id_491576_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['type', '-created_at'], name='botapp_tran_type_2986e1_idx'),
        ),
    ]
